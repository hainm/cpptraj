language: cpp
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
      - gfortran
      - libbz2-dev
      - libblas-dev
      - liblapack-dev
      - libarpack2-dev
      - libnetcdf-dev
      - libfftw3-dev
      - netcdf-bin
      - clang
      - openmpi-bin
      - openmpi-common
      - libopenmpi-dev
env:
  global:
    - secure: lDpHIm6fQp5/e8SnE8xDXgHS5t0VbrJuEKNr+GgNAntagXdVmgmre2vu6ucCbeiBvXAfAGwItnls5sw85aAowOjdeRYrWqK9mpw12uibCfZGcV0zBDKqQdzRmgpZ3ugB6wR1TRyA3HQjCZarxCQcNdjB7EJzEjbz9tu5VehVj17DWR5b2GyoXTGknkS2TUgHXTLUao12HrTFrNjeIhUrhHaJOdpt1rV/1HipS6tSE3ixJeIDdff+jxyfPUidQxz8nFXh8P19HAIyuTV0Ck1ZQftfFL4Nu4QOeuBZuoJ+zZVhArWZXamx6fAERqJirfT13t5PtU9nMdxCM7yMbHuoJqwf0XXYQJeBAbsG73BqUDQq8oaXER5QwM+rjE837nSI8zoTpfHckq6IXBw+Pp90bHDHjMo0RKeYNJ+2sML/AJDO61WQToTm9JWPYPSSAkfwXifPcVU30m4HnIWZNXCR9dIQtGHFZZg9I5bCpVitplbvvECcq1KYmU5n3Etk6Q4aEISUb/nsfiR5xInKXYr7FXX6f4LSNUgYrBVufF7uq2QngXWe22YcJ/YJocbw38WHxrdI73pqm4+QyuG0Drn9eGn3F1NO6WRaWpuB51Xm69vp4siTYDuKfUrtOn1vg60GqdVFPShzk+gANlj1ftqjm8+9w69r06OTcOtDyDdCVvc=
    - secure: e41/U+vFebd+WEHDVcWfTDg2wacG52Um7qwGuDHnouyPuxQXbZGLb0VsZxScJR1TTIBn79rdGNcUIk75rkm32JhfV5AT7Eqkyf4MglJGMypdEGKVGR6V9a5qzy9WUTtyLDcuyjtbY7wt31kwbPK3YwvVkDJWV3x7FahmhYTb8MDt8Q8dn5YRJ/pD6PWMFiFl0V5QmqRt5cetG6Vxg9Y4877hPrD1vUL/A32vIIt5SSEw28u2Gl5V10Xbu3ukzpjJwpMVdJPZNa13SG/AtaQ/VHBXEWkimWT40E9O3X5O/ZFS6pXM+A4KBK27hj7bM/dv+4mSkMrozMIonBVQ/ZoT8qRxmwbPS1Poq8D5KdQC10hhiPYYnzTRbV2PZr9GGUAJCa3r7FSlUdidkSCUTIsiLLvhJE51QNcz9G41XPgCmi9to4+5WLqSXE59cioTijZOIFap0V3eP5bgGPWfWAe0JmgfkTIOhzIQRdjkoX7BU0TEV+SavOzKDHIT5bOy5UyBAZVThCKjPT5iN5wT9Fi3abXLN8sDxI547CZHxfwHNKI0qudO+YfX/9s88JQwObHhQeExxPGfWjnzd5i9pUtK8jnacpt5+ZPQ8qTOF3n3tUeWxc0rDgYxRuREJfOLiFGtNQOc01NE1m7hEL9kRDX3aMnV5coJeZdxuaLpkjpOgLw=

matrix:
  include:
    - { os: linux, env: COMPILER=gnu BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=clang BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=gnu BUILD_FLAGS="-openmp" OPT=openmp OMP_NUM_THREADS=4 BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=gnu BUILD_FLAGS="-mpi" DO_PARALLEL="mpiexec -n 2" BUILD_TYPE=install TEST_TYPE=test.showerrors }
#   - { os: osx, env: COMPILER=clang BUILD_FLAGS="-macAccelerate --with-fftw3=/usr/local --with-netcdf=/usr/local -noarpack" BUILD_TYPE=install TEST_TYPE=test.showerrors }
    - { os: linux, env: COMPILER=gnu BUILD_FLAGS="-openmp -shared" OPT=openmp OMP_NUM_THREADS=1 BUILD_TYPE=libcpptraj TEST_TYPE=test.libcpptraj }

before_install:
  - set -e
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew tap homebrew/science;
      brew update;
      brew install netcdf fftw;
      curl -L ${PYSANDER_OSX} > $HOME/osx_libsander.7_1.tar.bz2tar.bz2;
      tar jxf $HOME/osx_libsander.tar.bz2 lib/libsander.dylib include/sander.h;
      shell_session_update() { echo "Overriding shell_session_update"; };
    else
      wget ${PYSANDER_LINUX};
      tar jxf pysander-16.0-py27_1.tar.bz2 lib/libsander.so include/sander.h;
    fi
  - mv lib include $HOME

install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          export DYLD_FALLBACK_LIBRARY_PATH=$HOME/lib:$DYLD_FALLBACK_LIBRARY_PATH;
          ./configure $BUILD_FLAGS CFLAGS="-lnetcdf -lfftw3" $COMPILER;
      else
          export LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH;
          ./configure $BUILD_FLAGS CFLAGS="-lnetcdf -lfftw3" $COMPILER;
      fi
    - make -j2 $BUILD_TYPE 
script:
    - cd test && make $TEST_TYPE
